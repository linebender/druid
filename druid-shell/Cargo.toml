[package]
name = "druid-shell"
version = "0.7.0"
license = "Apache-2.0"
authors = ["Raph Levien <raph.levien@gmail.com>"]
description = "Platform abstracting application shell used for druid toolkit."
repository = "https://github.com/linebender/druid"
readme = "README.md"
categories = ["os::macos-apis", "os::windows-apis", "gui"]
edition = "2018"

[package.metadata.docs.rs]
rustdoc-args = ["--cfg", "docsrs"]
default-target = "x86_64-pc-windows-msvc"

[features]
default = ["gtk"]
gtk = ["gio", "gdk", "gdk-sys", "glib", "glib-sys", "gtk-sys", "gtk-rs", "gdk-pixbuf"]
x11 = ["x11rb", "nix", "cairo-sys-rs"]
# Implement HasRawWindowHandle for WindowHandle 
raw-win-handle = ["raw-window-handle"]

# passing on all the image features. AVIF is not supported because it does not
# support decoding, and that's all we use `Image` for.
image_png = ["piet-common/image_png"]
jpeg = ["piet-common/jpeg"]
jpeg_rayon = ["piet-common/jpeg_rayon"]
gif = ["piet-common/gif"]
bmp = ["piet-common/bmp"]
ico = ["piet-common/ico"]
tiff = ["piet-common/tiff"]
webp = ["piet-common/webp"]
pnm = ["piet-common/pnm"]
dds = ["piet-common/dds"]
tga = ["piet-common/tga"]
farbfeld = ["piet-common/farbfeld"]
dxt = ["piet-common/dxt"]
hdr = ["piet-common/hdr"]

[dependencies]
# NOTE: When changing the piet or kurbo versions, ensure that
#       the kurbo version included in piet is compatible with the kurbo version specified here.
piet-common = "=0.3.2"
kurbo = "0.7.1"

tracing = "0.1.22"
lazy_static = "1.4.0"
time = "0.2.16"
cfg-if = "1.0.0"
instant = { version = "0.1.6", features = ["wasm-bindgen"] }
anyhow = "1.0.32"
keyboard-types = { version = "0.5.0", default_features = false }

# Optional dependencies
image = { version = "0.23.12", optional = true, default_features = false }
raw-window-handle = { version = "0.3.3", optional = true, default_features = false }

[target.'cfg(target_os="windows")'.dependencies]
scopeguard = "1.1.0"
wio = "0.2.2"

[target.'cfg(target_os="windows")'.dependencies.winapi]
version = "0.3.9"
features = ["d2d1_1", "dwrite", "winbase", "libloaderapi", "errhandlingapi", "winuser",
            "shellscalingapi", "shobjidl", "combaseapi", "synchapi", "dxgi1_3", "dcomp",
            "d3d11", "dwmapi", "wincon", "fileapi", "processenv", "winbase", "handleapi",
            "shellapi"]

[target.'cfg(target_os="macos")'.dependencies]
block = "0.1.6"
cocoa = "0.24.0"
objc = "0.2.7"
core-graphics = "0.22.0"
foreign-types = "0.3.2"
bitflags = "1.2.1"

[target.'cfg(target_os="linux")'.dependencies]
# TODO(x11/dependencies): only use feature "xcb" if using X11
cairo-rs = { version = "0.9.1", default_features = false, features = ["xcb"] }
cairo-sys-rs = { version = "0.10.0", default_features = false, optional = true }
gio = { version = "0.9.1", optional = true }
gdk = { version = "0.13.2", optional = true }
gdk-pixbuf = { version = "0.9.0", optional = true }
gdk-sys = { version = "0.10.0", optional = true }
# `gtk` gets renamed to `gtk-rs` so that we can use `gtk` as the feature name.
gtk-rs = { version = "0.9.2", features = ["v3_22"], package = "gtk", optional = true }
glib = { version = "0.10.1", optional = true }
glib-sys = { version = "0.10.0", optional = true }
gtk-sys = { version = "0.10.0", optional = true }
nix = { version = "0.18.0", optional = true }
x11rb = { version = "0.8.0", features = ["allow-unsafe-code", "present", "randr", "xfixes"], optional = true }

[target.'cfg(target_arch="wasm32")'.dependencies]
wasm-bindgen = "0.2.67"
js-sys = "0.3.44"

[target.'cfg(target_arch="wasm32")'.dependencies.web-sys]
version = "0.3.44"
features = ["Window", "MouseEvent", "CssStyleDeclaration", "WheelEvent", "KeyEvent", "KeyboardEvent"]

[dev-dependencies]
piet-common = { version = "=0.3.2", features = ["png"] }
static_assertions = "1.1.0"
test-env-log = { version = "0.2.5", features = ["trace"], default-features = false }
tracing-subscriber = "0.2.15"
unicode-segmentation = "1.7.0"
