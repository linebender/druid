on:
  push:
    branches:
      - master
  pull_request:

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    name: rustfmt
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true

      - name: install rustfmt
        run: rustup component add rustfmt

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  mdbook-build:
    runs-on: ubuntu-latest
    name: mdbook build
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: install mdbook
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --vers "^0.3" mdbook

      - name: mdbook build
        run: mdbook build
        working-directory: ./docs

  test-stable:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo test stable
    steps:
      - uses: actions/checkout@v2

      - name: install cairo
        run: brew install cairo
        if: contains(matrix.os, 'mac')

      - name: install libgtk-dev
        run: |
          sudo apt update
          sudo apt install libgtk-3-dev
        if: contains(matrix.os, 'ubuntu')

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      - name: cargo clippy (druid)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=druid/Cargo.toml --features=svg,image -- -D warnings

      - name: cargo clippy (druid-shell)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=druid-shell/Cargo.toml -- -D warnings

      - name: cargo clippy (druid-derive)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=druid-derive/Cargo.toml -- -D warnings

      - name: cargo test (druid)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path=druid/Cargo.toml --features=svg,image

      - name: cargo test (druid-shell)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path=druid-shell/Cargo.toml

      - name: cargo test (druid-derive)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path=druid-shell/Cargo.toml

      - name: Run rustc -D warnings in druid/
        uses: actions-rs/cargo@v1
        with:
          command: rustc
          args: --manifest-path=druid/Cargo.toml --features=svg,image -- -D warnings

      - name: Run rustc -d warnings in druid/druid-shell
        uses: actions-rs/cargo@v1
        with:
          command: rustc
          args: --manifest-path=druid-shell/Cargo.toml -- -D warnings

      - name: Run rustc -d warnings in druid/druid-derive
        uses: actions-rs/cargo@v1
        with:
          command: rustc
          args: --manifest-path=druid-derive/Cargo.toml -- -D warnings

  test-nightly:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo test nightly
    steps:
      - uses: actions/checkout@v2

      - name: install cairo
        run: brew install cairo
        if: contains(matrix.os, 'mac')

      - name: install libgtk-dev
        run: |
          sudo apt update
          sudo apt install libgtk-3-dev
        if: contains(matrix.os, 'ubuntu')

      - name: install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: cargo test --all
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

  check-docs:
    name: Docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: install cairo
        run: brew install cairo
        if: contains(matrix.os, 'mac')

      - name: install libgtk-dev
        run: |
          sudo apt update
          sudo apt install libgtk-3-dev
        if: contains(matrix.os, 'ubuntu')

      - name: install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: check docs in druid/
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --document-private-items

  # by default on linux we test gtk; to test x11 we need a separate job.
  test-stable-x11:
    runs-on: ubuntu-latest
    name: cargo test stable (x11)
    steps:
      - uses: actions/checkout@v2

      - name: install deps
        run: |
          sudo apt update
          sudo apt install libx11-dev libgtk-3-dev

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      - name: cargo clippy (x11)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=druid-shell/Cargo.toml --features=x11 -- -D warnings

      - name: cargo test druid-shell
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path=druid-shell/Cargo.toml --features=x11

      - name: cargo test druid
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path=druid/Cargo.toml --features=x11

      - name: Run rustc -d warnings in druid/druid-shell
        uses: actions-rs/cargo@v1
        with:
          command: rustc
          args: --manifest-path=druid-shell/Cargo.toml  --features=x11 -- -D warnings
